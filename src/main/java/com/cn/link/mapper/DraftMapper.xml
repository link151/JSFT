<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.link.mapper.DraftMapper">
  <resultMap id="BaseResultMap" type="com.cn.link.model.Draft">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="CHAR" property="no" />
    <result column="contractId" jdbcType="CHAR" property="contractid" />
    <result column="bank" jdbcType="CHAR" property="bank" />
    <result column="certificate" jdbcType="CHAR" property="certificate" />
    <result column="currency" jdbcType="CHAR" property="currency" />
    <result column="draftAmount" jdbcType="CHAR" property="draftamount" />
    <result column="draftRate" jdbcType="CHAR" property="draftrate" />
    <result column="draftDeadline" jdbcType="INTEGER" property="draftdeadline" />
    <result column="rmb" jdbcType="CHAR" property="rmb" />
    <result column="loanDate" jdbcType="CHAR" property="loandate" />
    <result column="refundDate" jdbcType="CHAR" property="refunddate" />
    <result column="lockAmount" jdbcType="CHAR" property="lockamount" />
    <result column="lockRate" jdbcType="CHAR" property="lockrate" />
    <result column="businessDeptApply" jdbcType="CHAR" property="businessdeptapply" />
    <result column="financialDeptApply" jdbcType="CHAR" property="financialdeptapply" />
    <result column="business_cnt" jdbcType="INTEGER" property="businessCnt" />
    <result column="financial_cnt" jdbcType="INTEGER" property="financialCnt" />
    <result column="dept" jdbcType="CHAR" property="dept" />
    <result column="deptId" jdbcType="CHAR" property="deptid" />
  </resultMap>
  <sql id="Base_Column_List">
    contractId, bank, certificate, currency, draftAmount, draftRate, draftDeadline, rmb, 
    loanDate, refundDate, lockAmount, lockRate, businessDeptApply, financialDeptApply, 
    business_cnt, financial_cnt, dept, deptId,no
  </sql>
  
  <select id="selectdraftByID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from draft
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from draft
    where contractId = #{contractid,jdbcType=CHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from draft
    where contractId = #{contractid,jdbcType=CHAR}
  </delete>
  
  <insert id="insert" parameterType="com.cn.link.model.Draft">
    insert into draft (contractId, bank, certificate, 
      currency, draftAmount, draftRate, 
      draftDeadline, rmb, loanDate, 
      refundDate, lockAmount, lockRate, 
      businessDeptApply, financialDeptApply,
      business_cnt, financial_cnt, dept,deptId,no)
    values (#{contractid,jdbcType=CHAR}, #{bank,jdbcType=CHAR}, #{certificate,jdbcType=CHAR}, 
      #{currency,jdbcType=CHAR}, #{draftamount,jdbcType=CHAR}, #{draftrate,jdbcType=CHAR}, 
      #{draftdeadline,jdbcType=INTEGER}, #{rmb,jdbcType=CHAR}, #{loandate,jdbcType=CHAR}, 
      #{refunddate,jdbcType=CHAR}, #{lockamount,jdbcType=CHAR}, #{lockrate,jdbcType=CHAR}, 
      #{businessdeptapply,jdbcType=CHAR}, #{financialdeptapply,jdbcType=CHAR},
      #{businessCnt,jdbcType=INTEGER}, #{financialCnt,jdbcType=INTEGER}, 
      #{dept,jdbcType=CHAR},#{deptid,jdbcType=CHAR},#{no,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.link.model.Draft">
    insert into draft
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractid != null">
        contractId,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="certificate != null">
        certificate,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="draftamount != null">
        draftAmount,
      </if>
      <if test="draftrate != null">
        draftRate,
      </if>
      <if test="draftdeadline != null">
        draftDeadline,
      </if>
      <if test="rmb != null">
        rmb,
      </if>
      <if test="loandate != null">
        loanDate,
      </if>
      <if test="refunddate != null">
        refundDate,
      </if>
      <if test="lockamount != null">
        lockAmount,
      </if>
      <if test="lockrate != null">
        lockRate,
      </if>
      <if test="businessdeptapply != null">
        businessDeptApply,
      </if>
      <if test="financialdeptapply != null">
        financialDeptApply,
      </if>
      <if test="businessCnt != null">
        business_cnt,
      </if>
      <if test="financialCnt != null">
        financial_cnt,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="deptid != null">
        deptId,
      </if>
      <if test="no != null">
        no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractid != null">
        #{contractid,jdbcType=CHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=CHAR},
      </if>
      <if test="certificate != null">
        #{certificate,jdbcType=CHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=CHAR},
      </if>
      <if test="draftamount != null">
        #{draftamount,jdbcType=CHAR},
      </if>
      <if test="draftrate != null">
        #{draftrate,jdbcType=CHAR},
      </if>
      <if test="draftdeadline != null">
        #{draftdeadline,jdbcType=INTEGER},
      </if>
      <if test="rmb != null">
        #{rmb,jdbcType=CHAR},
      </if>
      <if test="loandate != null">
        #{loandate,jdbcType=CHAR},
      </if>
      <if test="refunddate != null">
        #{refunddate,jdbcType=CHAR},
      </if>
      <if test="lockamount != null">
        #{lockamount,jdbcType=CHAR},
      </if>
      <if test="lockrate != null">
        #{lockrate,jdbcType=CHAR},
      </if>
      <if test="businessdeptapply != null">
        #{businessdeptapply,jdbcType=CHAR},
      </if>
      <if test="financialdeptapply != null">
        #{financialdeptapply,jdbcType=CHAR},
      </if>
      <if test="businessCnt != null">
        #{businessCnt,jdbcType=INTEGER},
      </if>
      <if test="financialCnt != null">
        #{financialCnt,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=CHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=CHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.link.model.Draft">
    update draft
    <set>
      <if test="bank != null">
        bank = #{bank,jdbcType=CHAR},
      </if>
      <if test="certificate != null">
        certificate = #{certificate,jdbcType=CHAR},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=CHAR},
      </if>
      <if test="draftamount != null">
        draftAmount = #{draftamount,jdbcType=CHAR},
      </if>
      <if test="draftrate != null">
        draftRate = #{draftrate,jdbcType=CHAR},
      </if>
      <if test="draftdeadline != null">
        draftDeadline = #{draftdeadline,jdbcType=INTEGER},
      </if>
      <if test="rmb != null">
        rmb = #{rmb,jdbcType=CHAR},
      </if>
      <if test="loandate != null">
        loanDate = #{loandate,jdbcType=CHAR},
      </if>
      <if test="refunddate != null">
        refundDate = #{refunddate,jdbcType=CHAR},
      </if>
      <if test="lockamount != null">
        lockAmount = #{lockamount,jdbcType=CHAR},
      </if>
      <if test="lockrate != null">
        lockRate = #{lockrate,jdbcType=CHAR},
      </if>
      <if test="businessdeptapply != null">
        businessDeptApply = #{businessdeptapply,jdbcType=CHAR},
      </if>
      <if test="financialdeptapply != null">
        financialDeptApply = #{financialdeptapply,jdbcType=CHAR},
      </if>
      <if test="businessCnt != null">
        business_cnt = #{businessCnt,jdbcType=INTEGER},
      </if>
      <if test="financialCnt != null">
        financial_cnt = #{financialCnt,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=CHAR},
      </if>
      <if test="deptid != null">
        deptId = #{deptid,jdbcType=CHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.cn.link.model.Draft">
    update draft
    set bank = #{bank,jdbcType=CHAR},
      certificate = #{certificate,jdbcType=CHAR},
      currency = #{currency,jdbcType=CHAR},
      draftAmount = #{draftamount,jdbcType=CHAR},
      draftRate = #{draftrate,jdbcType=CHAR},
      draftDeadline = #{draftdeadline,jdbcType=INTEGER},
      rmb = #{rmb,jdbcType=CHAR},
      loanDate = #{loandate,jdbcType=CHAR},
      refundDate = #{refunddate,jdbcType=CHAR},
      lockAmount = #{lockamount,jdbcType=CHAR},
      lockRate = #{lockrate,jdbcType=CHAR},
      businessDeptApply = #{businessdeptapply,jdbcType=CHAR},
      financialDeptApply = #{financialdeptapply,jdbcType=CHAR},
      business_cnt = #{businessCnt,jdbcType=INTEGER},
      financial_cnt = #{financialCnt,jdbcType=INTEGER},
      dept = #{dept,jdbcType=CHAR}
      deptId = #{deptid,jdbcType=CHAR}
      no = #{no,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateAcceptState">
    	update accept set state = '已押汇' where contractId = #{0}
  </update>
  
  <select id="listAllDraftOrderByBank" resultMap="BaseResultMap">
  	select *
  	from draft
  	ORDER BY bank
  </select>
  
  <select id="listDraftByDeptOrderByBank" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select *
  	from draft
  	where deptId = #{deptid,jdbcType=CHAR}
  	ORDER BY bank
  </select>
  
  <select id="getInfoFromDraftAndBill" parameterType="String" resultMap="DraftResultMap">
  	select * 
  	from draft, createBill, accept
  	where draft.contractId=createBill.contractId and
  	draft.contractId=accept.contractId and
  	draft.contractId=#{contractid,jdbcType=CHAR} limit 1
  </select>
  
  <select id="getMaxBusinessCnt" resultType="java.lang.Integer">
  	select MAX(business_cnt)
  	from draft;
  </select>
  <select id="getMaxFinancialCnt" resultType="java.lang.Integer">
  	select MAX(financial_cnt)
  	from draft;
  </select>
  <select id="selectDraftNotice" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from draft
    where refundDate = #{refunddate,jdbcType=CHAR}
  </select>
  <resultMap type="com.cn.link.model.Draft" id="DraftResultMap">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="CHAR" property="no" />
    <result column="contractId" jdbcType="CHAR" property="contractid" />
    <result column="bank" jdbcType="CHAR" property="bank" />
    <result column="certificate" jdbcType="CHAR" property="certificate" />
    <result column="currency" jdbcType="CHAR" property="currency" />
    <result column="draftAmount" jdbcType="CHAR" property="draftamount" />
    <result column="draftRate" jdbcType="CHAR" property="draftrate" />
    <result column="draftDeadline" jdbcType="INTEGER" property="draftdeadline" />
    <result column="rmb" jdbcType="CHAR" property="rmb" />
    <result column="loanDate" jdbcType="CHAR" property="loandate" />
    <result column="refundDate" jdbcType="CHAR" property="refunddate" />
    <result column="lockAmount" jdbcType="CHAR" property="lockamount" />
    <result column="lockRate" jdbcType="CHAR" property="lockrate" />
    <result column="businessDeptApply" jdbcType="CHAR" property="businessdeptapply" />
    <result column="financialDeptApply" jdbcType="CHAR" property="financialdeptapply" />
    <result column="business_cnt" jdbcType="INTEGER" property="businessCnt" />
    <result column="financial_cnt" jdbcType="INTEGER" property="financialCnt" />
    <result column="dept" jdbcType="CHAR" property="dept" />
    <result column="deptId" jdbcType="CHAR" property="deptid" />
          <association property="accept" javaType="com.cn.link.model.CreateAccept">
            <id column="contractId" jdbcType="CHAR" property="contractid"/>
			<result column="bank" jdbcType="CHAR" property="bank"/>
			<result column="currency" jdbcType="CHAR" property="currency"/>
			<result column="payAmount" jdbcType="CHAR" property="payamount"/>
			<result column="days" jdbcType="INTEGER" property="days"/>
			<result column="week" jdbcType="CHAR" property="week"/>
			<result column="payDate" jdbcType="CHAR" property="paydate"/>
			<result column="registerDate" jdbcType="CHAR" property="registerdate"/>
			<result column="lockAmount" jdbcType="CHAR" property="lockamount"/>
			<result column="lockRate" jdbcType="CHAR" property="lockrate"/>
			<result column="state" jdbcType="CHAR" property="state"/>
         </association>
         <association property="bill" javaType="com.cn.link.model.CreateBill">
            <id column="id" jdbcType="INTEGER" property="id" />
    		<result column="contractId" jdbcType="CHAR" property="contractid" />
		    <result column="bank" jdbcType="CHAR" property="bank" />
		    <result column="dept" jdbcType="CHAR" property="dept" />
		    <result column="goods" jdbcType="CHAR" property="goods" />
		    <result column="attribute" jdbcType="CHAR" property="attribute" />
		    <result column="proxyClient" jdbcType="CHAR" property="proxyclient" />
		    <result column="currency" jdbcType="CHAR" property="currency" />
		    <result column="crtAmount" jdbcType="CHAR" property="crtamount" />
		    <result column="crtDate" jdbcType="CHAR" property="crtdate" />
		    <result column="crtDeadline" jdbcType="INTEGER" property="crtdeadline" />
		    <result column="state" jdbcType="CHAR" property="state" />
         </association>
  </resultMap>
  <!-- <resultMap type="com.cn.link.model.Draft" id="intResult">
  	<id column="contractId" jdbcType="CHAR" property="contractid" />
  	<result column="business_cnt" jdbcType="INTEGER" property="businessCnt" />
    <result column="financial_cnt" jdbcType="INTEGER" property="financialCnt" />
  </resultMap> -->
  
    <select id="exportDraftA" resultMap="BaseResultMap">
	  	select *
	  	from draft
	  	where 1 = 1
	  	<!-- <if test="deptId != null and deptId !=''"> and deptId = #{deptid,jdbcType=INTEGER}</if> -->
	  	<if test="bank != null and bank !='-1'"> and bank = #{bank,jdbcType=CHAR}</if>
	  	<if test="certificate != null and certificate !='-1'"> and certificate LIKE concat (concat ('%',#{certificate,jdbcType=CHAR},'%')) </if>
	  	<if test="currency != null and currency !='-1'"> and currency = #{currency,jdbcType=CHAR}</if>
	  	<if test="draftAmount != null and draftAmount !='-1'"> and draftamount LIKE concat(concat('%',#{draftAmount,jdbcType=CHAR},'%')) </if>
	  	<if test="loanDate != null and loanDate !='-1' and loanDate != '/1'"> and loandate LIKE concat(concat('%', #{loanDate,jdbcType=CHAR},'%')) </if>
	  	<if test="refundDate != null and refundDate !='-1' and refundDate != '/1'"> and refunddate LIKE concat(concat('%', #{refundDate,jdbcType=CHAR},'%')) </if>
	  	<if test="contractId != null and contractId !='-1'"> and contractid LIKE concat(concat('%',#{contractId,jdbcType=CHAR},'%')) </if>
	  </select>
    <select id="exportDraftY" resultMap="BaseResultMap">
	  	select *
	  	from draft
	  	where 1 = 1 and deptid = #{deptId,jdbcType=CHAR}
	  	<!-- <if test="deptId != null and deptId !=''"> and deptId = #{deptid,jdbcType=INTEGER}</if> -->
	  	<if test="bank != null and bank !='-1'"> and bank = #{bank,jdbcType=CHAR}</if>
	  	<if test="certificate != null and certificate !='-1'"> and certificate LIKE concat (concat ('%',#{certificate,jdbcType=CHAR},'%')) </if>
	  	<if test="currency != null and currency !='-1'"> and currency = #{currency,jdbcType=CHAR}</if>
	  	<if test="draftAmount != null and draftAmount !='-1'"> and draftamount LIKE concat(concat('%',#{draftAmount,jdbcType=CHAR},'%')) </if>
	  	<if test="loanDate != null and loanDate !='-1' and loanDate != '/1'"> and loandate LIKE concat(concat('%', #{loanDate,jdbcType=CHAR},'%')) </if>
	  	<if test="refundDate != null and refundDate !='-1' and refundDate != '/1'"> and refunddate LIKE concat(concat('%', #{refundDate,jdbcType=CHAR},'%')) </if>
	  	<if test="contractId != null and contractId !='-1'"> and contractid LIKE concat(concat('%',#{contractId,jdbcType=CHAR},'%')) </if>
	  </select>
	  
	  <delete id="deleteById" parameterType="java.lang.Integer">
    	delete from draft
    	where id = #{id,jdbcType=INTEGER}
  	  </delete>
</mapper>