<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.link.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.cn.link.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="deptId" jdbcType="INTEGER" property="deptid" />
    <result column="dept" jdbcType="CHAR" property="dept" />
    <result column="role" jdbcType="CHAR" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, deptId, dept, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.link.model.User">
    insert into user (id, username, password, 
      deptId, dept, role)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{deptid,jdbcType=INTEGER}, #{dept,jdbcType=CHAR}, #{role,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.link.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="deptid != null">
        deptId,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=CHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.link.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="deptid != null">
        deptId = #{deptid,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=CHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.link.model.User">
    update user
    set username = #{username,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      deptId = #{deptid,jdbcType=INTEGER},
      dept = #{dept,jdbcType=CHAR},
      role = #{role,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryByUsername" parameterType="String" resultMap="BaseResultMap">
    select *
    from user
    where username = #{username,jdbcType=CHAR}
  </select>
  
  <select id="queryLogin" parameterType="String" resultMap="BaseResultMap">
    select *
    from user
    where username = #{0,jdbcType=CHAR} and password = #{1,jdbcType=CHAR}
  </select>
  
  <select id="queryDept" resultType="java.lang.String">
    select DISTINCT dept
    from user
  </select>
</mapper>